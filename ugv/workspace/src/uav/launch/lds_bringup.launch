<launch>
    
    <!-- Start ROS communication between the computer and ESP32 -->
    <!-- ESP_ROS_test_V4.ino is the Arduino sketch -->
    <!-- Subscribe: /cmd_vel, Publish: /odom, /lidar, /imu -->
    <node pkg="rosserial_python" type="serial_node.py" name="serial_node" respawn="true">
    	<param name="port" value="tcp"/>
    </node>

    <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames -->
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="-0.02 0 0 3.00 0 3.14 base_link laser 100" />
    <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0.02 0 0 3.14 0 0 base_link imu_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0 0 0 0 base_footprint base_link 100" />
    <!-- odom to base_footprint transform will be provided by the ekf_localization_node -->

    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_odom" clear_params="true"> 
        <rosparam command="load" file="$(find uav)/param/ekf/robot_localization_odom.yaml" />
    </node>
    
    <!-- Initial Pose and Goal Publisher -->
    <!-- Publish: /initialpose, /move_base_simple/goal -->
    
</launch>
